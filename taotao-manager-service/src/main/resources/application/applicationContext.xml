<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
       <!--<import resource="dispatcher-servlet.xml"></import>-->

       <!--注解形式加载bean，包扫描-->
       <context:component-scan base-package="com.taotao"></context:component-scan>

       <!--导入配置文件-->
       <bean id="propertyConfigurer"
             class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <!--配置单个properties-->
              <!--<property name="location" value="classpath:jdbc/jdbc.properties" />-->
              <!--配置多个properties-->
              <property name="locations">
                     <list>
                            <value>classpath:jdbc/jdbc.properties</value>
                            <!--<value>classpath:hessian-address/hessian-address.properties</value>-->
                     </list>
              </property>
       </bean>

       <!--hessian接口-->
       <!--<bean id="fileUploadServiceApi" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
              <property name="serviceUrl" value="${file-address}/api/fileUploadServiceApi" />
              <property name="serviceInterface" value="cn.jiuzhou.file.api.FileUploadServiceApi" />
       </bean>-->



       <!--数据源-->
       <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
       <!-- spring的DriverManagerDataSource与apache的BasicDataSource-->
       <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
              <property name="driverClassName" value="${driver}" />
              <property name="url" value="${url}" />
              <property name="username" value="${username}" />
              <property name="password" value="${password}" />
              <!-- 初始化连接大小 -->
              <!--<property name="initialSize" value="${initialSize}"></property>-->
              <!-- 连接池最大数量 -->
              <!--<property name="maxActive" value="${maxActive}"></property>-->
              <!-- 连接池最大空闲 -->
              <!--<property name="maxIdle" value="${maxIdle}"></property>-->
              <!-- 连接池最小空闲 -->
              <!--<property name="minIdle" value="${minIdle}"></property>-->
              <!-- 获取连接最大等待时间 -->
              <!--<property name="maxWait" value="${maxWait}"></property>-->
       </bean>

       <!--spring和mybatis整合-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource"></property>
              <property name="configLocation" value="classpath:mybatis-config/mybatis-config.xml"></property>
              <property name="mapperLocations">
                     <list>
                            <value>classpath*:com/taotao/mapper/**/*Mapper.xml</value>
                     </list>
              </property>
       </bean>
       <!--spring管理dao接口-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.taotao.mapper" />
              <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
       </bean>

       <!--事务管理器-->
       <bean id="transactionManager"
             class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>

       <!--事务通知 配置事务管理器 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <!--保证事务的原子性和一致性-->
              <tx:attributes>
                     <tx:method name="add*" propagation="REQUIRED" />
                     <tx:method name="save*" propagation="REQUIRED" />
                     <tx:method name="delete*" propagation="REQUIRED" />
                     <tx:method name="remove*" propagation="REQUIRED" />
                     <tx:method name="update*" propagation="REQUIRED" />
                     <tx:method name="modify*" propagation="REQUIRED" />
                     <!--不受事务控制的-->
                     <tx:method name="get*" read-only="true" />
                     <tx:method name="select*" read-only="true" />
                     <!-- <tx:method name="*" propagation="true" />-->
              </tx:attributes>
       </tx:advice>
       <!--事务切面 service层-->
       <aop:config>
              <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.taotao.service..*.*(..))"></aop:advisor>
       </aop:config>
</beans>